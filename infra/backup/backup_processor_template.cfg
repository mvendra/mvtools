
# Backup processor configuration template
# Format is: VARIABLE {option1: "option_value" / option2: "option_value"} = "variable_value"
# Environment variables are accepted as values. Values must be wrapped around quotes (even for options)
# Commentaries are allowed, as per this line (python-style)

#################################################################################

# This is a script to be run before the actual backup is carried out. if it fails (i.e. returns a nonzero), then
# the backup is aborted and a message is printed. it is optional however. This script can be used for collecting
# stuff from a home folder, for example - you'd want to have it copy files into another folder that will be marked
# for backing up. You can pass parameters to this script using the "param" option. Multiple params can be specified.

BKPREPARATION {param: "$HOME/infra/prepconfig.cfg"} = "$HOME/infra/prepbackup.py"

#################################################################################

# Specify a source folder with BKSOURCE. There can be more than one.
# The "descend" option specifies that the folder will be "stepped into" - i.e, a separate package will be created
# for each subitem inside the folder (subfolders and files). Without the "descend" option, only a single package
# with all the contents of the folder will be created. When using the "descend" option, it is possible to
# specify exceptions, with "ex: "folder_to_exclude"". It is *not* possible to specify sub-sub exceptions, and
# exceptions do not take any effect if the "descend" option is not used.

BKSOURCE = "$BACKUP_BASE_FOLDER/local_folder"
BKSOURCE {descend} = "$BACKUP_BASE_FOLDER/local_folder"
BKSOURCE {ex: "excluded1" / ex: "excluded2"} = "/some/local/folder1"
BKSOURCE {ex: "excluded_another" / descend} = "/some/local/folder2"

#################################################################################

BKTARGETS_ROOT = "/media/username/EXTERNAL_DISK"

# It's possible to specify multiple targets for writing the generated backups. Also,
# targets are checked for whether they're mounted or not. If writing to the local
# filesystem is desired, you have to specify the "nocheckmount" option as per
# the following syntax:

BKTARGETS_ROOT {nocheckmount} = "$HOME/local_backup_copy"

#################################################################################

# This is the temporary directory where the intermediate generated files are temporarily
# stored. It is deleted after completion, and the backups will not happen if this folder
# pre-exists.

BKTEMP = "/home/username/nuke/backuptmp"

# This is the base name of the target. So for example, when using "BKTARGETS_ROOT = /media/username/EXTERNAL_DISK", then
# the backups will be written to /media/username/EXTERNAL_DISK/Backup_Storage

BKTARGETS_BASEDIR = "Backup_Storage"
