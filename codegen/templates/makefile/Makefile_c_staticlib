.PHONY : all prepfolders clean compile link

# PLUMBING
COMPILER=gcc
LINKER=ar

# AUTOCONF PREP
BASE=../../..
BASE_SRC=$(BASE)/src
BASE_TMP=$(BASE)/tmp
BASE_OUT=$(BASE)/out
BASE_DEP=$(BASE)/dep

# PROJECT SETUP
# To link to this library, just do -lthe-library-name (i.e. $OUTNAME in this particular Makefile - see below)
OUTNAME=staticlib
SRC=subfolder/second.c
INCLUDES=-I$(BASE_SRC)
CFLAGS=-std=c23 -m64 -Wall -Wextra -Werror -Wconversion -pedantic -fPIC -finput-charset=utf-8 -fexec-charset=utf-8
POSTBUILD=

# DEFAULTS
PLAT=linux
MODE=release

# MODE
ifeq ($(MODE),)
	# to use, do 'make MODE=debug'
	MODE=debug
endif

# PLAT FLAGS
UNAME_S := $(shell uname -s)

# LINUX
ifeq ($(UNAME_S),Linux)
	PLAT=linux
endif

# MACOS
ifeq ($(UNAME_S),Darwin)
	PLAT=macos
endif

# DEBUG
ifeq ($(MODE),debug)
	CFLAGS+=-g -fsanitize=address -D_GLIBCXX_DEBUG
endif

# RELEASE
ifeq ($(MODE),release)
	CFLAGS+=-O2 -DNDEBUG
	POSTBUILD=strip -g $(OUTNAME_FULL)
endif

# AUTOCONF COMPLETE
TMP_FULL=$(BASE_TMP)/$(PLAT)/$(MODE)
OUT_FULL=$(BASE_OUT)/$(PLAT)/$(MODE)
ALL_OBJS=$(foreach src,$(SRC),$(TMP_FULL)/$(if $(filter-out ./,$(dir $(src))),$(subst /,_,$(dir $(src))),)$(notdir $(src:.c=.o)))
OUTNAME_FULL=$(OUT_FULL)/lib$(OUTNAME).a

# TARGET: ALL
all: prepfolders compile link

# TARGET: PREPFOLDERS
prepfolders:
	@mkdir -p $(TMP_FULL)
	@mkdir -p $(OUT_FULL)

# TARGET: COMPILE
compile:
	$(foreach src,$(SRC),$(COMPILER) $(INCLUDES) $(CFLAGS) -c $(BASE_SRC)/$(src) -o $(TMP_FULL)/$(if $(filter-out ./,$(dir $(src))),$(subst /,_,$(dir $(src))),)$(notdir $(src:.c=.o));)

# TARGET: LINK
link:
	$(LINKER) -rcs $(OUTNAME_FULL) $(ALL_OBJS)
	$(POSTBUILD)

# TARGET: CLEAN
clean:
	$(foreach objs,$(ALL_OBJS),rm $(objs);)
	rm $(OUTNAME_FULL)
