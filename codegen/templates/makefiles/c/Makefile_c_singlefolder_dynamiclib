
.PHONY : all clean compile link testapp 

LIBNAME= libdynamicsample.so
LIBLINKFNAME = dynamicsample
TESTAPPNAME= testlib
SONAME=libdynamicsample-dev.1.so

SRC= libraryfile.c
OBJ=$(SRC:.c=.o)
COMPILER=gcc

ARCH := $(shell getconf LONG_BIT)

ifeq ($(MODE),)
	MODE=debug
endif

ifeq ($(MODE),debug)
LDFLAGS=-lasan
CFLAGS += \
	-g \
	-Wall \
	-Wextra \
	-pedantic \
	-Werror \
	-fPIC \
	-fsanitize=address \
	-pthread \
	-D_GLIBCXX_DEBUG \
	-std=c18
POSTBUILD=
#DEFINES= -D _DEBUG -D _LOG 
endif

ifeq ($(MODE),release)
CFLAGS += \
 	-O2 \
	-Wall \
	-Wextra \
	-pedantic \
	-Werror \
	-fPIC \
	-pthread \
	-std=c18
POSTBUILD= strip $(LIBNAME)
#DEFINES= -D _LOG 
endif

ifeq ($(ARCH),64)
	CFLAGS += -m64
endif

INCLUDES=-I.
LDFLAGS+=

all: compile link testapp

compile:
	$(COMPILER) -c $(SRC) $(CFLAGS)
	$(POSTBUILD)

link:
	$(COMPILER) -o $(LIBNAME) -shared $(OBJ) -Wl,-soname,$(SONAME)

testapp:
	$(COMPILER) -c $(CFLAGS) $(INCLUDES) main.c
	$(COMPILER) -o $(TESTAPPNAME) main.o -L. -l$(LIBLINKFNAME) -Wl,-rpath,"." $(LDFLAGS)

clean:
	rm -rf $(LIBNAME)
	rm -rf $(TESTAPPNAME)
	rm -rf $(OBJ)
	rm -rf main.o
